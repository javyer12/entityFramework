// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using entity;

#nullable disable

namespace entity.Migrations
{
    [DbContext(typeof(TaskContext))]
    partial class TaskContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("entity.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Relevance")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("e2411a88-eb28-4ea5-a220-85d5e2d4fa7a"),
                            Name = "Pending Activities",
                            Relevance = "40"
                        },
                        new
                        {
                            CategoryId = new Guid("e2411a88-eb28-4ea5-a220-85d5e2d4fa7b"),
                            Name = "React Activities",
                            Relevance = "80"
                        },
                        new
                        {
                            CategoryId = new Guid("e2411a88-eb28-4ea5-a220-85d5e2d4fa7c"),
                            Name = "Entity Framework",
                            Relevance = "50"
                        });
                });

            modelBuilder.Entity("entity.Models.Task", b =>
                {
                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2022, 11, 12, 13, 24, 30, 288, DateTimeKind.Local).AddTicks(8170));

                    b.Property<DateTime>("DeadLine")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<int>("PriorityTask")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("TaskId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Task", (string)null);

                    b.HasData(
                        new
                        {
                            TaskId = new Guid("e2411a88-eb28-4ea5-a220-85d5e2d4fa71"),
                            CategoryId = new Guid("e2411a88-eb28-4ea5-a220-85d5e2d4fa7b"),
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeadLine = new DateTime(2022, 11, 12, 13, 24, 30, 288, DateTimeKind.Local).AddTicks(4390),
                            Description = "We need to understand how UseContext works.",
                            PriorityTask = 1,
                            Title = " Use UseContext"
                        },
                        new
                        {
                            TaskId = new Guid("e2411a88-eb28-4ea5-a220-85d5e2d4fa72"),
                            CategoryId = new Guid("e2411a88-eb28-4ea5-a220-85d5e2d4fa7a"),
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeadLine = new DateTime(2022, 11, 12, 13, 24, 30, 288, DateTimeKind.Local).AddTicks(4420),
                            Description = "To Create wonderfull interface is essential for us to inhance our skills.",
                            PriorityTask = 0,
                            Title = "Create Interface"
                        },
                        new
                        {
                            TaskId = new Guid("e2411a88-eb28-4ea5-a220-85d5e2d4fa73"),
                            CategoryId = new Guid("e2411a88-eb28-4ea5-a220-85d5e2d4fa7b"),
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeadLine = new DateTime(2022, 11, 12, 13, 24, 30, 288, DateTimeKind.Local).AddTicks(4430),
                            Description = "Today we have to finish this course.",
                            PriorityTask = 2,
                            Title = " Finish EF Course"
                        });
                });

            modelBuilder.Entity("entity.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("entity.Models.Task", b =>
                {
                    b.HasOne("entity.Models.Category", "Category")
                        .WithMany("Task")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("entity.Models.Category", b =>
                {
                    b.Navigation("Task");
                });
#pragma warning restore 612, 618
        }
    }
}
